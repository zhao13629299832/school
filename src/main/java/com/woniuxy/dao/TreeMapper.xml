<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.dao.TreeMapper">
  <resultMap id="BaseResultMap" type="com.woniuxy.entity.Tree">
    <id column="tree_id" jdbcType="INTEGER" property="treeId" />
    <result column="tree_pid" jdbcType="INTEGER" property="treePid" />
    <result column="tree_name" jdbcType="VARCHAR" property="treeName" />
    <result column="tree_file" jdbcType="VARCHAR" property="treeFile" />
    <result column="tree_icon" jdbcType="VARCHAR" property="treeIcon" />
    <result column="tree_isdelete" jdbcType="BIT" property="treeIsdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tree_id, tree_pid, tree_name, tree_file, tree_icon, tree_isdelete
  </sql>
  <select id="selectByExample" parameterType="com.woniuxy.entity.TreeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tree
    where tree_id = #{treeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tree
    where tree_id = #{treeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniuxy.entity.TreeExample">
    delete from tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniuxy.entity.Tree">
    insert into tree (tree_id, tree_pid, tree_name, 
      tree_file, tree_icon, tree_isdelete
      )
    values (#{treeId,jdbcType=INTEGER}, #{treePid,jdbcType=INTEGER}, #{treeName,jdbcType=VARCHAR}, 
      #{treeFile,jdbcType=VARCHAR}, #{treeIcon,jdbcType=VARCHAR}, #{treeIsdelete,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniuxy.entity.Tree">
    insert into tree
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="treeId != null">
        tree_id,
      </if>
      <if test="treePid != null">
        tree_pid,
      </if>
      <if test="treeName != null">
        tree_name,
      </if>
      <if test="treeFile != null">
        tree_file,
      </if>
      <if test="treeIcon != null">
        tree_icon,
      </if>
      <if test="treeIsdelete != null">
        tree_isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="treeId != null">
        #{treeId,jdbcType=INTEGER},
      </if>
      <if test="treePid != null">
        #{treePid,jdbcType=INTEGER},
      </if>
      <if test="treeName != null">
        #{treeName,jdbcType=VARCHAR},
      </if>
      <if test="treeFile != null">
        #{treeFile,jdbcType=VARCHAR},
      </if>
      <if test="treeIcon != null">
        #{treeIcon,jdbcType=VARCHAR},
      </if>
      <if test="treeIsdelete != null">
        #{treeIsdelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniuxy.entity.TreeExample" resultType="java.lang.Long">
    select count(*) from tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tree
    <set>
      <if test="record.treeId != null">
        tree_id = #{record.treeId,jdbcType=INTEGER},
      </if>
      <if test="record.treePid != null">
        tree_pid = #{record.treePid,jdbcType=INTEGER},
      </if>
      <if test="record.treeName != null">
        tree_name = #{record.treeName,jdbcType=VARCHAR},
      </if>
      <if test="record.treeFile != null">
        tree_file = #{record.treeFile,jdbcType=VARCHAR},
      </if>
      <if test="record.treeIcon != null">
        tree_icon = #{record.treeIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.treeIsdelete != null">
        tree_isdelete = #{record.treeIsdelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tree
    set tree_id = #{record.treeId,jdbcType=INTEGER},
      tree_pid = #{record.treePid,jdbcType=INTEGER},
      tree_name = #{record.treeName,jdbcType=VARCHAR},
      tree_file = #{record.treeFile,jdbcType=VARCHAR},
      tree_icon = #{record.treeIcon,jdbcType=VARCHAR},
      tree_isdelete = #{record.treeIsdelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniuxy.entity.Tree">
    update tree
    <set>
      <if test="treePid != null">
        tree_pid = #{treePid,jdbcType=INTEGER},
      </if>
      <if test="treeName != null">
        tree_name = #{treeName,jdbcType=VARCHAR},
      </if>
      <if test="treeFile != null">
        tree_file = #{treeFile,jdbcType=VARCHAR},
      </if>
      <if test="treeIcon != null">
        tree_icon = #{treeIcon,jdbcType=VARCHAR},
      </if>
      <if test="treeIsdelete != null">
        tree_isdelete = #{treeIsdelete,jdbcType=BIT},
      </if>
    </set>
    where tree_id = #{treeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniuxy.entity.Tree">
    update tree
    set tree_pid = #{treePid,jdbcType=INTEGER},
      tree_name = #{treeName,jdbcType=VARCHAR},
      tree_file = #{treeFile,jdbcType=VARCHAR},
      tree_icon = #{treeIcon,jdbcType=VARCHAR},
      tree_isdelete = #{treeIsdelete,jdbcType=BIT}
    where tree_id = #{treeId,jdbcType=INTEGER}
  </update>
</mapper>